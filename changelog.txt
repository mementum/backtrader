1.1.10.88:
  - Small documentation updates
  - Indicators can be plotted on/over other indicators
  - Sample of plot-on-same-axis added

1.1.9.88:
  - Doc/Readme additions for 3.5
  - Removed dangling py3 in writer from six transition
  - Added writer testcase

1.1.8.88:
  - Added Python 3.5 to Travis CI
  - Removed 2.6 and added 3.5 from setup.py
  - Refactored bt-run.py to internal function and added btrun executable to
    installation
  - Added cerebro parameters and writers support to btrun
  - Fixed duplicate writers next call in "next" mode
  - Improved LineSeries objects name printing in WriterFile and changed "csv"
    to False
  - Correct sign of "closed" if a long/short position if a position is reduced:
    closes #18
  - Removed six dependency through small internal Py2/Py3 module and updated
    docs and setup.py
  - Removed nose-exclude from test requirements
  - Implement current order status in broker
  - 0 can be passed as number of maxcpus for optimization (same as None)
  - SQN and TradeAnalyzer documented

1.1.7.88:
  - Drop Python 2.6 support (also removing internal OrderedDict) after adding
    nexbars which needs collections.deque with maxlen (>= 2.7)
  - First Writer Implemenatation for CSV Output
  - TradeAnalyzer implementation
  - SystemQualityNumber (SQN) implementation

1.1.6.88:
  - Broker reworked to check margin/cost limits on order submission/execution
  - Broker fix to avoid having the wrong sign on short "Trades"
  - Rework Trades commission deduction
  - Additions to Position, Order to support broker new checks
  - Add missing analyzers loop call to "_next"
  - Observers loop handled in Strategy now (only object holding them)
  - Observers reachable in strategy via new alias "observers" (in addition to
    "stats")
  - Cosmetic changes to analyer pprint
  - Correction to Position.__len__ to work with negative sizes (short positions)
  - Crossover defaults to true for plotting just like any other indicator
  - "Exactbars" mode added which limits the amounts of bars to those needed by
    each indicator. Disables runonce, preloading and plotting. It uses a
    ringbuffer method
  - Documentation/Samples directory (and hence doc fixes) rework
  - Documentationn rework for direct execution of scripts against sample datas
    #16
  - Multiple Data Strategy added as Sample
  - Automatic import of flushfile
  - Added LineForward as complement to LineDelay
  - Correct double call to Analyzer._next
  - Cover case in which a line from a data is directly assigned, avoiding the
    binding to kick-in too early
  - Correction in Accum indicator (typo line -> lines) and super addition to
    WilliamsAD

1.1.5.88:
  - Added reversion to stage1 operator behavior when the strategy backtesting is
    over
  - Refactoring of minimum period calculation in LineIterator
  - Refactoring of strategy minimum period calculation to allow indicator
    injection
  - Cerebro support for addition of indictors to inject into strategies
  - bt-run rework to support multiple strategies (o none), observers, indicators
    and analyzers with individual kwargs per entry
  - bt-run rework of plotting to single argument with kwargs
  - Corrected ill behavior when separatin multiple line objects passed as single
    argument to an indicator which lead to multi-owner management for the 2nd
    line and posterior
  - Analyzer defines stubs for print pprint and get_analysis
  - Addion of LineDelay opposite: LineForward to support positive (look/write
    backwards) arguments in the line(period) notation
  - Added datas and data alias in Analyzers

1.1.4.88:
  - Thorough documentation rework
  - Corner case for multiple timeframe datas when the larger timeframe doesn't
    contribute to minimum period with indicators
  - Correction of data resampling which affected same timeframe (which is valid
    because compression can be different)
  - Built-In Strategies auto-documentation added
  - Blaze data support and Pandas Datafeed with only numeric indices support
  - bt-run accepts kwargs per loaded object (strategy, observer, analyzer) and
    can load the default Strategy object if none is specified

1.1.3.88:
  - Automation bt-run.py script added
  - Pandas Dataframe support
  - Improvements to OrderedDict imports for Python 2.6 compatibility
  - Default reference price for orders is bar closing price if not set like in
    Market orders
  - Analyzers added: non-lines objects offering in-run/post-run statistics
  - Analyzers added: SharpeRatio and AnnualReturn
  - Improved Observers which now support (like Indicators/Strategies)
    prenext/nextstart
  - Simplified cerebro return values for run: single list if not optimizing and
    list of lists if optimizing
  - Order Execution Sample script added
  - SMA_CrosssOver Strategy included in submodule backtrader.strategies

1.1.2.88:
  - Generic Data Feed Development Documentation
  - Observers Documentation
  - Support for last tick values in data feeds (data.tick_xxx with xxx being,
    open, high, low, close, volume, openinterest. Unless a real-time feed is
    used or a replay is done, the values will be those of the regular bar
  - Replayer support filling up the last used tick_xxx values
  - Orders have new attribute with the next end of session after the order
  - Broker uses the tick prices for order execution supporting with it the same
    logic in replay and regular mode
  - Fixes #11: On Market Close Orders new logic including end of session check
    support
  - VisualChart binary file direct support

1.1.1.88:
  - Quickstart documentation update to use Trades
  - Issue #3 setcash before the run corrected
  - Addition of GenericCSVData (following #6)
  - Documentation on DataFeeds
  - SierraChartCSVData added
  - Documentation on DataFeed development
  - #8 to address valid for order limited in time
  - Improved to order creation (via buy/sell) from the strategy
  - Corrected plimit typo in order execution
  - Corrected redefinition of enum for order execution types Stop/StopLimit
  - Order cloning and unique id per order to allow same order notified
    twice in same interval with different events
  - Added missing notification for order.accept
  - Broker refactoring on BuyOrder detection and price naming for limit
  - Documentation on order creation and execution

1.1.0.88:
  - Added Gitter stuff to README.rst
  - Documentation updates
  - Moved operations calculations to strategy with extra P&L information from
    the broker (with an updated CommissionInfo profitandloss method) and
    simplified Operations observer along the way
  - Removal of the analyzer paradigm, refactoring the introduction of observers,
    which now can be done through Cerebro to make them really usable as
    statistics generators. Default observers get added from Cerebro unless
    explicitly indicatoed not to do so
  - notify renamed to notify_order (patch support included)
  - notify_operation renamed to notify_trade
  - All "Operation" references changed to "Trade"
  - Minor version bump due to the "Operation" and "Observer" refactoring
  - Addition of a drawdown observer

1.0.10.88:
  - Further corrections for more "unpickable" cases

1.0.9.88:
  - Multicore support for optimization
  - Corrected quickstart samples to change Yahoo "reversed" to "reverse" and
    change the value from True to False
  - Changes needed to support pickling: adding dynamic classes to modules,
    assigning unique names to dynamic classes, not keeping instance methods in
    variables and removing lambda definitions for functions defined at module
    level
  - Changes to testcommon and test_strategy_optimized to avoid nosetests errors
    with multiprocessing

1.0.8.88:
  - Correction to yahoodownload from landscape.io check when exception is raised
  - alias plotname assignment done before the alias variable is overwritten to
    avoid plotname from just being the 2nd letter of the alias
  - Added incminperiod to increase minperiods with non further calculations
  - Notation relaxation: indicators may not indicate on which data they operate
    and the data of the owner will be used automatically
  - zlema now calles super on init
  - Cosmetic corrections to moving averages to not use aliased names
  - Corner minimum period calculation case covered in
    ExponentialSmoothingDynamic in which a passed line as a parameter is not being
    considered in any calculation because there is no line assignment in the
    indicator
  - Corrections to FeedBase to avoid passing "dataname" twice
  - Added a crosshairs cursor to the charts using modified MultiCursor from
    matplotlib (submitted to Matplotlib)
  - Moving Average Refactoring into separated files
  - Indicators (88): Trix/TrixSignal (w doc/test)

1.0.7.86
  - Import Indicator and functions into the indicators package to enable
    indicators to do a "from ." import
  - Improvements to class alias definition
  - Indicators (74): basicops receives Average, WeightedAverage, ExpSmoothing,
    ExpSmoothingDynamic
  - Indicator (75): ZLEMA with tests and documentation
  - Refactored MovingAverage placeholder and MovingAverages to use basic
    operations and autoregister in the placeholder
  - Refactored DEMA, TEMA, ZLEMA to subclasses of MovingAverageBase for
    autoregistrattion
  - Refactored envelope to automatically create envelopes from all
    auto-registered MovingAverages
  - Refactored oscillator to automatically create envelopes from all
    auto-registered MovingAverages
  - Indicators (77): ZLEMAEnvelope, ZLEMAOscillator added
  - Indicators (79): TrueLow, TrueHigh added and TrueRange refactored to use them
  - Indicators (81): UpDayBool, DownDayBool as specialized versions of UpDay and
    DownDay
  - Refactored all indicators to do a relative "." import for Indicator and
    functions
  - Removed docstring code from LineSeries to move it to a sphinx extension
  - Added sphinx etension to automate documentation of indicators
  - Removed previous indicator documentation and added "indautoref" own
    directive for autodocumentation
  - indicators autoregister with Indicator (for things like autodocumentation)
  - Avoid automatically generated Envelope/Oscillator from MovingAverages to
    register to avoid "EnvelopeOscillator" subclasses
  - Indicators receiving only 1 data get the 2nd and later lines as extras (use
    case: a crossover uses line 0 and 1 automatically)
  - Indicators (85): PriceOscillator, PercentagePriceOscillator,
    PercentagePriceOscillatorShort, PrettyGoodOscillator added
  - Indicators (86) - Williams Accumulation/Distribution (WilliamsAD) added

1.0.6.70
  - Correction of bug which prevented lines in different indicators to have the
    same name and different index at the same hierarchy level
  - Added AroonUpDown, AroonOscillator, AroonUp, AroonDown,
    AroonUpDownOscillator (with tests and docs)
  - Added basic indicators FindFirstIndex, FindFirstIndexHighest,
    FindFirstIndexLowest (with test and docs)
  - Added basic indicators FindLastIndex, FindLastIndexHighest,
    FindLastIndexLowest (with test and docs)
  - Documented OperationN (so anyone can subclass it if wished)
  - Removed old MaxN and MinN (same as Highest and Lowest)
  - Made RSI_SMA the class and RSI_Cutler the alias
  - Added support in plot and lineiterator to put plot specific code (like
    dynamically setting plothlines) in a separate method to fully separate
    indicator logic from any plotting logic
  - Fully specified Python versions supported in setup.py and some PEP8 changes
  - Changed test case generation string printing to simplify operations (Python
    3.2 doesn't support 'u')
  - Existing indicators updated to use new plot/indicator code logic separation
  - Improvements to envelope object hierarchy with method to prepare periods
  - Changed (previously unused) behavior of assignment to lines[x],
    allowing establishing line bindings without knowing the alias
  - Subclass OperationN from new PeriodN to allow for subclasses of
    basic PeriodN with no need to define "func"
  - LineSeries objects "lines" can be mixed with objects holding "lines"
    attributes
  - MetaParams objects can be mixed with other objects containing "params"
  - MetaLineSeries support for alias definition and autodocumentation of alias,
    lines, parameters, plotinfo and plotlines
  - Correction to AutoInfoClass._getdefaults to correctly return a list under
    Py3
  - Refactored Moving Averages to be "formulated" objects rather than next/once
    based to allow for easy mixin/subclassing
  - Refactored and simplified envelope indicators
  - Refactored indicators to use alias and semi-autodocumentation facilities
    from LineSeries
  - Indicators (60): DEMA, TEMA (with tests and docs)
  - Indicators (62): DEMAEnvelope, TEMAEnvelope (with tests and docs)
  - Indicators (70): Oscillator, SMAOsc, EMAOsc, SMMAOsc, WMAOsc, DEMAOsc and
    TEMAOsc (with testcases and docs) added (MixIn also documented)
  - Testcase for Envelope added
  - Plot bug correccted which could prevent indicators (on same plot as data) on
    indicators from being plotted
  - Plot support for plotlines properties to be specified as lines

1.0.5.47
  - CCI Plotting labels improved
  - WilliamsR plotname/plotlines names improved
  - Stochastic plotlines names improved
  - Momentum plotting labels improved
  - DirectionalMovement plotting labels improved
  - XXXDeviations plotting labels improved
  - Changes (__hash__ in lineroot and list(xxx.values) when plotting) for Python
    3.4 compatibility
  - test_strategy_optimized import xrange from six for Python 3 and travis.yml
    updated to runn with Python 3.4 too
  - OrderedDict recipe added for Python 2.6 compatibility
  - Continuous integration check under Travis added for 2.6/3.2/3.3
  - Updated Readme and docs about Python compatibility

1.0.4.47
  - Tests for strategy optimized/not optimized added
  - Cosmetic change to "triggered" parameter initialization in StopLimitOrders
  - Test added for "Operation"
  - Test for "Position"
  - All indicators changed to used absolute imports for clarity and possible
    independence
  - Added indicator MeanDeviation (and doc)
  - Added indicator CommodityChannelIndex (CCI) (docs and test)
  - Reordered StdDeviation/MeanDeviation into own module and doc sub-section
  - Plot support for lines having a name different than the class alias (ex:
    plusDI can be plotted as +DI)
  - Update docs badge link to project, add direct link to indicators in docs and
    clarify installation from sources with header
  - Refactoring of UpDays/DownDays to UpDay/DownDay for RSI
  - DirectionalMove Indicators (+tests/docs): DI, +DI, -DI, ADX, ADXR, DMI, DM

1.0.3.36
  - Wikipedia link for DetrendedPriceOscillator
  - Renaming of Stochastic and Williams lines to include "perc" (originally %)
  - Removal of specific plotnames in MovingAverages
  - Williams renamed to WilliamsR for accuracy and line renamed to percR
  - Stochastic lines renamed to percK and percD from kperc and dperc for
    accuracy
  - StochasticFull added (3 lines)
  - CrossOver, CrossUp, CrossDown indicators and documentation
  - Correct broker usage in "close" operation
  - Operations observer plotting style changed to "full"
  - BuySell observer plotting style changed to full and buy color changed to
    lime for visibility
  - Broker correction of initial commission assigment. Introduced error when
    adding support for optimization
  - Added indicators: Envelope, SMAEnvelope, EMAEnvelope, SMMAEnvelope,
    WMAEnvelope, KAMAEnvelope (tests and docs included)
  - Corrected label plotting when a LineSeries object is passed as label
  - Documentation and test for CommissionInfo

1.0.2.26
  - Correction to minperiod calculation to correctly calculate and take into
    account indicator on indicator/single lines minperiods together with
    multi-timeframe datas
  - Extra plotting defaults to lineiterator to simplify plotting code
  - Added plotforce to force plotting of an indicator which relies on
    non-plotted/plottable data/clock sources
  - Plotting support for indicator on indicator respecting above/below order
  - Support plotting indicators which don't have a data/indicator clock by
    looking up the chain
  - Add badges' alternative test and add a badge for the documentation
  - KAMA sets plotname to override inherited one from SimpleMovingAverage
  - Williams %R indicator and test
  - Momentum, RateOfChange, MomentumOscillator and tests

1.0.1.22
  - Reordering and addition of sample datas
  - Addition of samples limited to 2014 and 2006
  - Independent Yahoo Online Download Tool
  - TrueRange formula improvement
  - Changed LineSeries "array" access to property
  - data_0 references changed to more generic data
  - Added AdaptiveMovingAverage
  - AdaptiveMovingAverage added to the docs
  - YahooCSV "reversed" parameter changed to reverse (and inverted default to
    False
  - Changes to make online downloads Py3 compatible
  - Multi-Timeframe datas which are exhausted will return empty bars
  - Improvements in VChartCSVData for name and timeframe recognition
  - Added own simple csv format for sample
  - Reordering/Addition of data samples
  - Addition of nosetest testcases covering indicators, data multi timeframe
    and resampling
  - Travis-ci integration
  - Extra minperiod check in LineIterator postinit hook to account for
    indicators with calculations in __init__ not applied directly to line
    assignments

1.0.0.21
  - First tagged and documented release
